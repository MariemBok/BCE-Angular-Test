{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/tv-maze.service\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/details\", a1];\n};\nfunction SeriesSearchComponent_div_9_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const result_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, result_r3.show.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(result_r3.show.name);\n  }\n}\nfunction SeriesSearchComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Search Results:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, SeriesSearchComponent_div_9_li_4_Template, 3, 4, \"li\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.searchResults);\n  }\n}\nexport class SeriesSearchComponent {\n  tvMazeService;\n  router;\n  searchQuery = 'girls';\n  searchResults = [];\n  constructor(tvMazeService, router) {\n    this.tvMazeService = tvMazeService;\n    this.router = router;\n  }\n  ngOnInit() {}\n  search(query) {\n    this.tvMazeService.getSeries(query).pipe(map(data => data.map(item => item.show))).subscribe(processedData => {\n      console.log('Processed results:', processedData);\n      this.searchResults = processedData;\n    }, error => {\n      console.error('Error fetching search results:', error);\n    });\n  }\n  navigateToDetails(showId) {\n    this.router.navigate(['/details', showId]);\n  }\n  static ɵfac = function SeriesSearchComponent_Factory(t) {\n    return new (t || SeriesSearchComponent)(i0.ɵɵdirectiveInject(i1.TvMazeService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SeriesSearchComponent,\n    selectors: [[\"app-series-search\"]],\n    decls: 10,\n    vars: 1,\n    consts: [[1, \"container\", \"m-3\"], [1, \"row\"], [1, \"col-sm\"], [\"placeholder\", \"Enter search query\", 1, \"form-control\"], [\"searchInput\", \"\"], [3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"]],\n    template: function SeriesSearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n        i0.ɵɵtext(4, \"Search for TV Shows\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3, 4);\n        i0.ɵɵelementStart(7, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function SeriesSearchComponent_Template_button_click_7_listener() {\n          i0.ɵɵrestoreView(_r4);\n          const _r0 = i0.ɵɵreference(6);\n          return i0.ɵɵresetView(ctx.search(_r0.value));\n        });\n        i0.ɵɵtext(8, \"Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, SeriesSearchComponent_div_9_Template, 5, 1, \"div\", 6);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.searchResults);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["map","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","result_r3","show","id","ɵɵtextInterpolate","name","ɵɵtemplate","SeriesSearchComponent_div_9_li_4_Template","ctx_r1","searchResults","SeriesSearchComponent","tvMazeService","router","searchQuery","constructor","ngOnInit","search","query","getSeries","pipe","data","item","subscribe","processedData","console","log","error","navigateToDetails","showId","navigate","ɵɵdirectiveInject","i1","TvMazeService","i2","Router","selectors","decls","vars","consts","template","SeriesSearchComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","SeriesSearchComponent_Template_button_click_7_listener","ɵɵrestoreView","_r4","_r0","ɵɵreference","ɵɵresetView","value","SeriesSearchComponent_div_9_Template"],"sources":["C:\\Work\\BCE-Angular-Test\\bce-app\\src\\app\\series-search\\series-search.component.ts","C:\\Work\\BCE-Angular-Test\\bce-app\\src\\app\\series-search\\series-search.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { TvMazeService } from '../../services/tv-maze.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-series-search',\r\n  templateUrl: './series-search.component.html',\r\n  styleUrls: ['./series-search.component.css'],\r\n})\r\nexport class SeriesSearchComponent implements OnInit {\r\n  searchQuery: string = 'girls';\r\n  searchResults: any[] = [];\r\n  constructor(private tvMazeService: TvMazeService, private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  search(query: string) {\r\n    this.tvMazeService\r\n      .getSeries(query)\r\n      .pipe(map((data: any[]) => data.map((item) => item.show)))\r\n      .subscribe(\r\n        (processedData) => {\r\n          console.log('Processed results:', processedData);\r\n          this.searchResults = processedData;\r\n        },\r\n        (error) => {\r\n          console.error('Error fetching search results:', error);\r\n        }\r\n      );\r\n  }\r\n\r\n  navigateToDetails(showId: number) {\r\n    this.router.navigate(['/details', showId]);\r\n  }\r\n}\r\n","<div class=\"container m-3\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm\">\r\n      <h2>Search for TV Shows</h2>\r\n      <input\r\n        #searchInput\r\n        placeholder=\"Enter search query\"\r\n        class=\"form-control\"\r\n      />\r\n      <button (click)=\"search(searchInput.value)\">Search</button>\r\n      <div *ngIf=\"searchResults\">\r\n        <h3>Search Results:</h3>\r\n        <ul>\r\n          <li *ngFor=\"let result of searchResults\">\r\n            <a [routerLink]=\"['/details', result.show.id]\">{{\r\n              result.show.name\r\n            }}</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;;;;;;;ICW1BC,EAAA,CAAAC,cAAA,SAAyC;IACQD,EAAA,CAAAE,MAAA,GAE7C;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAFHH,EAAA,CAAAI,SAAA,GAA2C;IAA3CJ,EAAA,CAAAK,UAAA,eAAAL,EAAA,CAAAM,eAAA,IAAAC,GAAA,EAAAC,SAAA,CAAAC,IAAA,CAAAC,EAAA,EAA2C;IAACV,EAAA,CAAAI,SAAA,GAE7C;IAF6CJ,EAAA,CAAAW,iBAAA,CAAAH,SAAA,CAAAC,IAAA,CAAAG,IAAA,CAE7C;;;;;IANRZ,EAAA,CAAAC,cAAA,UAA2B;IACrBD,EAAA,CAAAE,MAAA,sBAAe;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACxBH,EAAA,CAAAC,cAAA,SAAI;IACFD,EAAA,CAAAa,UAAA,IAAAC,yCAAA,gBAIK;IACPd,EAAA,CAAAG,YAAA,EAAK;;;;IALoBH,EAAA,CAAAI,SAAA,GAAgB;IAAhBJ,EAAA,CAAAK,UAAA,YAAAU,MAAA,CAAAC,aAAA,CAAgB;;;ADHjD,OAAM,MAAOC,qBAAqB;EAGZC,aAAA;EAAsCC,MAAA;EAF1DC,WAAW,GAAW,OAAO;EAC7BJ,aAAa,GAAU,EAAE;EACzBK,YAAoBH,aAA4B,EAAUC,MAAc;IAApD,KAAAD,aAAa,GAAbA,aAAa;IAAyB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE3EG,QAAQA,CAAA,GAAU;EAElBC,MAAMA,CAACC,KAAa;IAClB,IAAI,CAACN,aAAa,CACfO,SAAS,CAACD,KAAK,CAAC,CAChBE,IAAI,CAAC3B,GAAG,CAAE4B,IAAW,IAAKA,IAAI,CAAC5B,GAAG,CAAE6B,IAAI,IAAKA,IAAI,CAACnB,IAAI,CAAC,CAAC,CAAC,CACzDoB,SAAS,CACPC,aAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,aAAa,CAAC;MAChD,IAAI,CAACd,aAAa,GAAGc,aAAa;IACpC,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,CACF;EACL;EAEAC,iBAAiBA,CAACC,MAAc;IAC9B,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,UAAU,EAAED,MAAM,CAAC,CAAC;EAC5C;;qBAxBWlB,qBAAqB,EAAAjB,EAAA,CAAAqC,iBAAA,CAAAC,EAAA,CAAAC,aAAA,GAAAvC,EAAA,CAAAqC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;;UAArBxB,qBAAqB;IAAAyB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QCVlChD,EAAA,CAAAC,cAAA,aAA2B;QAGjBD,EAAA,CAAAE,MAAA,0BAAmB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC5BH,EAAA,CAAAkD,SAAA,kBAIE;QACFlD,EAAA,CAAAC,cAAA,gBAA4C;QAApCD,EAAA,CAAAmD,UAAA,mBAAAC,uDAAA;UAAApD,EAAA,CAAAqD,aAAA,CAAAC,GAAA;UAAA,MAAAC,GAAA,GAAAvD,EAAA,CAAAwD,WAAA;UAAA,OAASxD,EAAA,CAAAyD,WAAA,CAAAR,GAAA,CAAA1B,MAAA,CAAAgC,GAAA,CAAAG,KAAA,CAAyB;QAAA,EAAC;QAAC1D,EAAA,CAAAE,MAAA,aAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC3DH,EAAA,CAAAa,UAAA,IAAA8C,oCAAA,iBASM;QACR3D,EAAA,CAAAG,YAAA,EAAM;;;QAVEH,EAAA,CAAAI,SAAA,GAAmB;QAAnBJ,EAAA,CAAAK,UAAA,SAAA4C,GAAA,CAAAjC,aAAA,CAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}