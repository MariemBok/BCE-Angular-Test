{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/tv-maze.service\";\nexport class SeriesSearchComponent {\n  tvMazeService;\n  searchQuery = '';\n  searchResults = [];\n  constructor(tvMazeService) {\n    this.tvMazeService = tvMazeService;\n  }\n  ngOnInit() {}\n  search() {\n    this.tvMazeService.getSeries(this.searchQuery).pipe(map(data => data.map(item => item.show))).subscribe(processedData => {\n      console.log('Processed results:', processedData);\n      this.searchResults = processedData;\n    }, error => {\n      console.error('Error fetching search results:', error);\n    });\n  }\n  static ɵfac = function SeriesSearchComponent_Factory(t) {\n    return new (t || SeriesSearchComponent)(i0.ɵɵdirectiveInject(i1.TvMazeService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SeriesSearchComponent,\n    selectors: [[\"app-series-search\"]],\n    decls: 8,\n    vars: 0,\n    consts: [[1, \"container\", \"m-3\"], [1, \"row\"], [1, \"col-sm\"], [\"placeholder\", \"Enter search query\", 1, \"form-control\"], [3, \"click\"]],\n    template: function SeriesSearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n        i0.ɵɵtext(4, \"Search for TV Shows\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function SeriesSearchComponent_Template_button_click_6_listener() {\n          return ctx.search();\n        });\n        i0.ɵɵtext(7, \"Search\");\n        i0.ɵɵelementEnd()()()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["map","SeriesSearchComponent","tvMazeService","searchQuery","searchResults","constructor","ngOnInit","search","getSeries","pipe","data","item","show","subscribe","processedData","console","log","error","i0","ɵɵdirectiveInject","i1","TvMazeService","selectors","decls","vars","consts","template","SeriesSearchComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","SeriesSearchComponent_Template_button_click_6_listener"],"sources":["C:\\Work\\BCE-Angular-Test\\bce-app\\src\\app\\series-search\\series-search.component.ts","C:\\Work\\BCE-Angular-Test\\bce-app\\src\\app\\series-search\\series-search.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { TvMazeService } from '../../services/tv-maze.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-series-search',\r\n  templateUrl: './series-search.component.html',\r\n  styleUrls: ['./series-search.component.css'],\r\n})\r\nexport class SeriesSearchComponent implements OnInit {\r\n  searchQuery: string = '';\r\n  searchResults: any[] = [];\r\n  constructor(private tvMazeService: TvMazeService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  search() {\r\n    this.tvMazeService\r\n      .getSeries(this.searchQuery)\r\n      .pipe(map((data: any[]) => data.map((item) => item.show)))\r\n      .subscribe(\r\n        (processedData) => {\r\n          console.log('Processed results:', processedData);\r\n          this.searchResults = processedData;\r\n        },\r\n        (error) => {\r\n          console.error('Error fetching search results:', error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"container m-3\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm\">\r\n      <h2>Search for TV Shows</h2>\r\n      <input placeholder=\"Enter search query\" class=\"form-control\" />\r\n      <button (click)=\"search()\">Search</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAOpC,OAAM,MAAOC,qBAAqB;EAGZC,aAAA;EAFpBC,WAAW,GAAW,EAAE;EACxBC,aAAa,GAAU,EAAE;EACzBC,YAAoBH,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;EAAkB;EAEnDI,QAAQA,CAAA,GAAU;EAElBC,MAAMA,CAAA;IACJ,IAAI,CAACL,aAAa,CACfM,SAAS,CAAC,IAAI,CAACL,WAAW,CAAC,CAC3BM,IAAI,CAACT,GAAG,CAAEU,IAAW,IAAKA,IAAI,CAACV,GAAG,CAAEW,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CACzDC,SAAS,CACPC,aAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,aAAa,CAAC;MAChD,IAAI,CAACV,aAAa,GAAGU,aAAa;IACpC,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,CACF;EACL;;qBApBWhB,qBAAqB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,aAAA;EAAA;;UAArBpB,qBAAqB;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTlCV,EAAA,CAAAY,cAAA,aAA2B;QAGjBZ,EAAA,CAAAa,MAAA,0BAAmB;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAC5Bd,EAAA,CAAAe,SAAA,eAA+D;QAC/Df,EAAA,CAAAY,cAAA,gBAA2B;QAAnBZ,EAAA,CAAAgB,UAAA,mBAAAC,uDAAA;UAAA,OAASN,GAAA,CAAAtB,MAAA,EAAQ;QAAA,EAAC;QAACW,EAAA,CAAAa,MAAA,aAAM;QAAAb,EAAA,CAAAc,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}